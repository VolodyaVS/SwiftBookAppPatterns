//
//  CourseListViewController.swift
//  SwiftBookAppPatterns
//
//  Created by Vladimir Stepanchikov on 15.02.2021.
//  Copyright (c) 2021 Vladimir Stepanchikov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CourseListDisplayLogic: class {
    func displayCourses(viewModel: CourseList.ShowCourses.ViewModel)
}

class CourseListViewController: UIViewController {
    
    @IBOutlet var tableView: UITableView!
    
    // MARK: Public Properties
    var interactor: CourseListBusinessLogic?
    var router: (NSObjectProtocol & CourseListRoutingLogic & CourseListDataPassing)?
    
    // MARK: Private Properties
    private var courses: [CourseDisplayedFields] = []
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        CourseListConfigurator.shared.configure(with: self)
        
        tableView.rowHeight = 100
        setupNavigationBar()
        getCourses()
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: - Private Methods
    private func getCourses() {
        interactor?.showCourses()
    }
    
    private func setupNavigationBar() {
        if #available(iOS 13.0, *) {
            let navBarAppearance = UINavigationBarAppearance()
            navBarAppearance.configureWithOpaqueBackground()
            navBarAppearance.titleTextAttributes = [.foregroundColor: UIColor.white]
            navBarAppearance.largeTitleTextAttributes = [.foregroundColor: UIColor.white]
            navBarAppearance.backgroundColor = .systemBlue
            navigationController?.navigationBar.standardAppearance = navBarAppearance
            navigationController?.navigationBar.scrollEdgeAppearance = navBarAppearance
        }
    }
    
    private func setup() {
        let viewController = self
        let interactor = CourseListInteractor()
        let presenter = CourseListPresenter()
        let router = CourseListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
}

// MARK: - UITableViewDataSource
extension CourseListViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView,
                   numberOfRowsInSection section: Int) -> Int {
        courses.count
    }
    
    func tableView(_ tableView: UITableView,
                   cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(
            withIdentifier: "courseCell",
            for: indexPath) as! CourseTableViewCell
        
        let course = courses[indexPath.row]
        cell.configure(for: course)
        
        return cell
    }
}

// MARK: - UITableViewDelegate
extension CourseListViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}

// MARK: - Protocol Implementation
extension CourseListViewController: CourseListDisplayLogic {
    func displayCourses(viewModel: CourseList.ShowCourses.ViewModel) {
        courses = viewModel.courseList
        DispatchQueue.main.async {
            self.tableView.reloadData()
        }
    }
}
